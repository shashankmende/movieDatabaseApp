{"version":3,"sources":["components/ReferencePage/index.js","components/Navbar/index.js","components/PopularPage/index.js","components/TopRated/index.js","components/Upcoming/index.js","components/movieDetails/index.js","components/SearchComponent/index.js","App.js","index.js"],"names":["Reference","props","movie","title","posterPath","voteAverage","id","imageUrl","concat","_jsxs","className","children","_jsx","src","alt","Link","to","type","Navbar","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","movieName","expand","onChangeMovieName","event","setState","target","value","menu","Popup","trigger","IoIosMenu","modal","position","close","onClick","IoMdClose","onClickButton","renderSearchBar","placeholder","onChange","AiOutlineSearch","size","_createClass","key","_this$state","this","Component","Popular","movieDetails","isLoading","convertSnakeCaseToPascalCase","dta","adult","backdropPath","backdrop_path","genreIds","genre_ids","originalLanguage","original_language","originalTitle","original_title","overView","overview","popularity","poster_path","releaseDate","release_date","video","vote_average","voteCount","vote_count","getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","results","newData","wrap","_context","prev","next","fetch","sent","json","console","log","ok","map","each","stop","renderPopularDetails","det","renderLoading","Loader","color","renderResult","_Fragment","TopRated","MovieDetails","castDetails","castId","cast_id","character","creditId","credit_id","gender","knownForDepartment","known_for_department","name","order","originalName","original_name","profilePath","profile_path","match","params","apiUrl","movieData","rating","duration","runtime","genre","genres","getCastData","_callee2","cast","_context2","renderGenre","undefined","genre1","genre2","renderMovieDetails","renderCastDetails","_this2","Search","searchResults","renderSearchResults","App","Switch","Route","exact","path","component","Upcoming","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.b16c9ca7.chunk.js","sourcesContent":["import './index.css'\nimport {Link} from 'react-router-dom'\n\nconst Reference = props => {\n  const {movie} = props\n  const {title, posterPath, voteAverage, id} = movie\n\n  const imageUrl = `https://image.tmdb.org/t/p/original/${posterPath}`\n\n  return (\n    <li className=\"movie-item\">\n      <img src={imageUrl} alt=\"moviePoster\" className=\"image\" />\n      <p className=\"text\">{title}</p>\n      <p className=\"text\">{voteAverage}</p>\n      <Link to={`/movie-details/${id}`}>\n        <button type=\"button\" className=\"viewbutton\">\n          View Details\n        </button>\n      </Link>\n    </li>\n  )\n}\n\nexport default Reference\n","import './index.css'\nimport {Component} from 'react'\nimport {AiOutlineSearch} from 'react-icons/ai'\nimport {Link} from 'react-router-dom'\nimport Popup from 'reactjs-popup'\nimport {IoIosMenu, IoMdClose} from 'react-icons/io'\n\nclass Navbar extends Component {\n  state = {movieName: '', expand: false}\n\n  onChangeMovieName = event => {\n    this.setState({\n      movieName: event.target.value,\n    })\n  }\n\n  menu = () => (\n    <Popup trigger={<IoIosMenu />} modal position=\"bottom center\">\n      {close => (\n        <div className=\"popup-container\">\n          <button type=\"button\" className=\"close\" onClick={close}>\n            <IoMdClose />\n          </button>\n          <ul className=\"min-devices\">\n            <Link to=\"/\" className=\"link-component\">\n              <li>\n                <p>Popular</p>\n              </li>\n            </Link>\n            <Link to=\"/top-rated\" className=\"link-component\">\n              <li>\n                <p>Top Rated</p>\n              </li>\n            </Link>\n            <Link to=\"/upcoming\" className=\"link-component\">\n              <li>\n                <p>Upcoming</p>\n              </li>\n            </Link>\n          </ul>\n        </div>\n      )}\n    </Popup>\n  )\n\n  onClickButton = () => {\n    const {expand} = this.state\n    this.setState({\n      expand: !expand,\n    })\n  }\n\n  renderSearchBar = () => {\n    const {movieName} = this.state\n    return (\n      <div className=\"search-container\">\n        <input\n          type=\"search\"\n          className=\"input\"\n          value={movieName}\n          placeholder=\"Search\"\n          onChange={this.onChangeMovieName}\n        />\n        <Link to={`/searchMovies/${movieName}`}>\n          <button\n            type=\"button\"\n            className=\"search-button\"\n            onClick={this.onClickButton}\n          >\n            <AiOutlineSearch size={25} />\n          </button>\n        </Link>\n      </div>\n    )\n  }\n\n  render() {\n    const {movieName, expand} = this.state\n\n    return (\n      <div>\n        <div className=\"nav-container\">\n          <h1 className=\"title\">movieDB</h1>\n          <div className=\"large-screen-search\">{this.renderSearchBar()}</div>\n          <button\n            type=\"button\"\n            className=\"search-button small-screen-button\"\n            onClick={this.onClickButton}\n          >\n            <AiOutlineSearch size={25} />\n          </button>\n\n          <div className=\"small-devices\">\n            {this.menu()}\n            <div id=\"popup-root\" className=\"popup_root\" />\n          </div>\n\n          <ul className=\"routes-container\">\n            <Link to=\"/\" className=\"link-component\">\n              <li>\n                <p>Popular</p>\n              </li>\n            </Link>\n            <Link to=\"/top-rated\" className=\"link-component\">\n              <li>\n                <p>Top Rated</p>\n              </li>\n            </Link>\n            <Link to=\"/upcoming\" className=\"link-component\">\n              <li>\n                <p>Upcoming</p>\n              </li>\n            </Link>\n          </ul>\n        </div>\n        <div className=\"mobile-search-bar\">\n          {expand ? this.renderSearchBar() : ''}\n        </div>\n      </div>\n    )\n  }\n}\nexport default Navbar\n","import './index.css'\nimport Loader from 'react-loader-spinner'\n\nimport {Component} from 'react'\nimport Reference from '../ReferencePage'\nimport Navbar from '../Navbar'\n\nclass Popular extends Component {\n  state = {movieDetails: '', isLoading: false}\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  convertSnakeCaseToPascalCase = dta => ({\n    adult: dta.adult,\n    backdropPath: dta.backdrop_path,\n    genreIds: dta.genre_ids,\n    id: dta.id,\n    originalLanguage: dta.original_language,\n    originalTitle: dta.original_title,\n    overView: dta.overview,\n    popularity: dta.popularity,\n    posterPath: dta.poster_path,\n    releaseDate: dta.release_date,\n    title: dta.title,\n    video: dta.video,\n    voteAverage: dta.vote_average,\n    voteCount: dta.vote_count,\n  })\n\n  getData = async () => {\n    this.setState({\n      isLoading: true,\n    })\n    const apiUrl =\n      'https://api.themoviedb.org/3/movie/popular?api_key=888e953eb74eb6d5e00f9d0a0bc602cd&language=en-US&page=1'\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    console.log('response data=', data)\n    if (response.ok === true) {\n      const {results} = data\n      const newData = results.map(each =>\n        this.convertSnakeCaseToPascalCase(each),\n      )\n      this.setState({\n        movieDetails: newData,\n        isLoading: false,\n      })\n    }\n  }\n\n  renderPopularDetails = det => {\n    console.log('render popular detials fucntion////////*******', det)\n    if (det !== '') {\n      return det.map(each => <Reference key={each.id} movie={each} />)\n    }\n    return ''\n  }\n\n  renderLoading = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"ThreeDots\" color=\"blue\" />\n    </div>\n  )\n\n  renderResult = () => {\n    const {isLoading, movieDetails} = this.state\n    if (isLoading === false) {\n      return this.renderPopularDetails(movieDetails)\n    }\n    return this.renderLoading()\n  }\n\n  render() {\n    const {movieDetails} = this.state\n    console.log('movie details*****', movieDetails)\n    return (\n      <>\n        <Navbar />\n        <div className=\"popular-container\">\n          <div className=\"width-container\">\n            <h1 className=\"popular-heading\">Popular</h1>\n            <ul className=\"movies-container\">{this.renderResult()}</ul>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Popular\n","import './index.css'\nimport Loader from 'react-loader-spinner'\n\nimport {Component} from 'react'\nimport Reference from '../ReferencePage'\nimport Navbar from '../Navbar'\n\nclass TopRated extends Component {\n  state = {movieDetails: '', isLoading: false}\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  convertSnakeCaseToPascalCase = dta => ({\n    adult: dta.adult,\n    backdropPath: dta.backdrop_path,\n    genreIds: dta.genre_ids,\n    id: dta.id,\n    originalLanguage: dta.original_language,\n    originalTitle: dta.original_title,\n    overView: dta.overview,\n    popularity: dta.popularity,\n    posterPath: dta.poster_path,\n    releaseDate: dta.release_date,\n    title: dta.title,\n    video: dta.video,\n    voteAverage: dta.vote_average,\n    voteCount: dta.vote_count,\n  })\n\n  getData = async () => {\n    this.setState({\n      isLoading: true,\n    })\n    const apiUrl =\n      'https://api.themoviedb.org/3/movie/top_rated?api_key=888e953eb74eb6d5e00f9d0a0bc602cd&language=en-US&page=1'\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    console.log('response data=', data)\n    if (response.ok === true) {\n      const {results} = data\n      const newData = results.map(each =>\n        this.convertSnakeCaseToPascalCase(each),\n      )\n      this.setState({\n        movieDetails: newData,\n        isLoading: false,\n      })\n    }\n  }\n\n  renderPopularDetails = det => {\n    console.log('render popular detials fucntion////////*******', det)\n    if (det !== '') {\n      return det.map(each => <Reference key={each.id} movie={each} />)\n    }\n    return ''\n  }\n\n  renderLoading = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"ThreeDots\" color=\"blue\" />\n    </div>\n  )\n\n  renderResult = () => {\n    const {isLoading, movieDetails} = this.state\n    if (isLoading === false) {\n      return this.renderPopularDetails(movieDetails)\n    }\n    return this.renderLoading()\n  }\n\n  render() {\n    const {movieDetails} = this.state\n    console.log('movie details*****', movieDetails)\n    return (\n      <>\n        <Navbar />\n        <div className=\"popular-container\">\n          <div className=\"width-container\">\n            <h1 className=\"popular-heading\">Top Rated</h1>\n            <ul className=\"movies-container\">{this.renderResult()}</ul>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default TopRated\n","import './index.css'\nimport Loader from 'react-loader-spinner'\n\nimport {Component} from 'react'\nimport Reference from '../ReferencePage'\nimport Navbar from '../Navbar'\n\nclass TopRated extends Component {\n  state = {movieDetails: '', isLoading: false}\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  convertSnakeCaseToPascalCase = dta => ({\n    adult: dta.adult,\n    backdropPath: dta.backdrop_path,\n    genreIds: dta.genre_ids,\n    id: dta.id,\n    originalLanguage: dta.original_language,\n    originalTitle: dta.original_title,\n    overView: dta.overview,\n    popularity: dta.popularity,\n    posterPath: dta.poster_path,\n    releaseDate: dta.release_date,\n    title: dta.title,\n    video: dta.video,\n    voteAverage: dta.vote_average,\n    voteCount: dta.vote_count,\n  })\n\n  getData = async () => {\n    this.setState({\n      isLoading: true,\n    })\n    const apiUrl =\n      'https://api.themoviedb.org/3/movie/upcoming?api_key=888e953eb74eb6d5e00f9d0a0bc602cd&language=en-US&page=1'\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    console.log('response data=', data)\n    if (response.ok === true) {\n      const {results} = data\n      const newData = results.map(each =>\n        this.convertSnakeCaseToPascalCase(each),\n      )\n      this.setState({\n        movieDetails: newData,\n        isLoading: false,\n      })\n    }\n  }\n\n  renderPopularDetails = det => {\n    if (det !== '') {\n      return det.map(each => <Reference key={each.id} movie={each} />)\n    }\n    return ''\n  }\n\n  renderLoading = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"ThreeDots\" color=\"blue\" />\n    </div>\n  )\n\n  renderResult = () => {\n    const {isLoading, movieDetails} = this.state\n    if (isLoading === false) {\n      return this.renderPopularDetails(movieDetails)\n    }\n    return this.renderLoading()\n  }\n\n  render() {\n    const {movieDetails} = this.state\n    console.log('movie details*****', movieDetails)\n    return (\n      <>\n        <Navbar />\n        <div className=\"popular-container\">\n          <div className=\"width-container\">\n            <h1 className=\"popular-heading\">Upcoming</h1>\n            <ul className=\"movies-container\">{this.renderResult()}</ul>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default TopRated\n","import './index.css'\nimport {Component} from 'react'\n\nimport Navbar from '../Navbar'\n\nclass MovieDetails extends Component {\n  state = {movieDetails: [], castDetails: []}\n\n  componentDidMount() {\n    this.getData()\n    this.getCastData()\n  }\n\n  convertSnakeCaseToPascalCase = dta => ({\n    adult: dta.adult,\n    castId: dta.cast_id,\n    character: dta.character,\n    creditId: dta.credit_id,\n    gender: dta.gender,\n    id: dta.id,\n    knownForDepartment: dta.known_for_department,\n    name: dta.name,\n    order: dta.order,\n    originalName: dta.original_name,\n    popularity: dta.popularity,\n    profilePath: dta.profile_path,\n  })\n\n  getData = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const apiUrl = `https://api.themoviedb.org/3/movie/${id}?api_key=888e953eb74eb6d5e00f9d0a0bc602cd&language=en-US`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n\n    if (response.ok === true) {\n      const movieData = {\n        name: data.original_title,\n        imageUrl: `https://image.tmdb.org/t/p/original/${data.poster_path}`,\n        rating: data.vote_average,\n        duration: data.runtime,\n        genre: data.genres,\n        releaseDate: data.release_date,\n        overView: data.overview,\n      }\n      console.log('response data = ', movieData)\n      this.setState({\n        movieDetails: movieData,\n      })\n    }\n  }\n\n  getCastData = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const apiUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=888e953eb74eb6d5e00f9d0a0bc602cd&language=en-US`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n\n    if (response.ok === true) {\n      const {cast} = data\n      console.log('old cast', cast)\n      const newData = cast.map(each => this.convertSnakeCaseToPascalCase(each))\n      console.log('new data', newData)\n      this.setState({\n        castDetails: newData,\n      })\n    }\n  }\n\n  renderGenre = genre => {\n    if (genre !== undefined) {\n      if (genre.length === 2) {\n        const genre1 = genre[0].name\n        const genre2 = genre[1].name\n        return (\n          <p>\n            {genre1}/{genre2}\n          </p>\n        )\n      }\n\n      const genre1 = genre[0].name\n      return <p>{genre1}</p>\n    }\n    return ''\n  }\n\n  renderMovieDetails = () => {\n    const {movieDetails} = this.state\n    const {\n      name,\n      imageUrl,\n      rating,\n      duration,\n\n      releaseDate,\n      overView,\n    } = movieDetails\n    const {genre} = movieDetails\n\n    return (\n      <div className=\"movie-details-container\">\n        <div className=\"left-container\">\n          <img src={imageUrl} className=\"detailed-image\" />\n          <div className=\"movie-details-text-container\">\n            <h1>{name}</h1>\n            <div className=\"duration-genre-rating-container\">\n              <p>{releaseDate}</p>\n\n              {this.renderGenre(genre)}\n              <p>{duration} m</p>\n              <p>{rating}</p>\n            </div>\n            <h3>Overview</h3>\n            <p>{overView}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderCastDetails = cast => {\n    const {originalName, character, profilePath} = cast\n    const imageUrl = `https://image.tmdb.org/t/p/original/${profilePath}`\n    return (\n      <li className=\"each-cast\">\n        <img src={imageUrl} className=\"cast-image\" />\n        <h4>{originalName}</h4>\n        <p>{character}</p>\n      </li>\n    )\n  }\n\n  render() {\n    const {castDetails} = this.state\n\n    return (\n      <>\n        <Navbar />\n\n        <div className=\"container\">\n          {this.renderMovieDetails()}\n\n          {castDetails !== undefined ? (\n            <div className=\"cast-container\">\n              <h2 className=\"cast-heading\">Cast</h2>\n              <ul className=\"unordered-container\">\n                {castDetails.map(each => this.renderCastDetails(each))}\n              </ul>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default MovieDetails\n","import './index.css'\n\nimport {Component} from 'react'\nimport Navbar from '../Navbar'\nimport Reference from '../ReferencePage'\n\nclass Search extends Component {\n  state = {searchResults: ''}\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  convertSnakeCaseToPascalCase = dta => ({\n    adult: dta.adult,\n    backdropPath: dta.backdrop_path,\n    genreIds: dta.genre_ids,\n    id: dta.id,\n    originalLanguage: dta.original_language,\n    originalTitle: dta.original_title,\n    overView: dta.overview,\n    popularity: dta.popularity,\n    posterPath: dta.poster_path,\n    releaseDate: dta.release_date,\n    title: dta.title,\n    video: dta.video,\n    voteAverage: dta.vote_average,\n    voteCount: dta.vote_count,\n  })\n\n  getData = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {movieName} = params\n    const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=888e953eb74eb6d5e00f9d0a0bc602cd&language=en-US&query=${movieName}&page=1`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n\n    if (response.ok === true) {\n      const {results} = data\n      const newData = results.map(each =>\n        this.convertSnakeCaseToPascalCase(each),\n      )\n      this.setState({\n        searchResults: newData,\n      })\n    }\n  }\n\n  renderSearchResults = () => {\n    const {searchResults} = this.state\n\n    console.log('search results=', searchResults)\n    if (searchResults !== '') {\n      return (\n        <ul className=\"search-container\">\n          {searchResults.map(each => (\n            <Reference movie={each} key={each.id} />\n          ))}\n        </ul>\n      )\n    }\n    return ''\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"search-home-container\">\n          <Navbar />\n          {this.renderSearchResults()}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Search\n","import './App.css'\nimport {Switch, Route} from 'react-router-dom'\n\nimport Popular from './components/PopularPage'\nimport TopRated from './components/TopRated'\nimport Upcoming from './components/Upcoming'\nimport MovieDetails from './components/movieDetails'\nimport Search from './components/SearchComponent'\n\n// write your code here\nconst App = () => (\n  <>\n    <Switch>\n      <Route exact path=\"/\" component={Popular} />\n      <Route exact path=\"/top-rated\" component={TopRated} />\n      <Route exact path=\"/upcoming\" component={Upcoming} />\n      <Route exact path=\"/movie-details/:id\" component={MovieDetails} />\n      <Route exact path=\"/searchMovies/:movieName\" component={Search} />\n    </Switch>\n  </>\n)\n\nexport default App\n","import {BrowserRouter} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}